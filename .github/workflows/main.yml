name: CI
on:
  workflow_dispatch:
    inputs:
      environment:
        description: Job to dispatch
        required: true
        type: choice
        options:
          - node
          - lint
          - test
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      print_tags:
        description: 'True to print to STDOUT'
        required: true
        type: boolean
      tags:
        description: 'Test scenario tags'
        required: false
        type: string
      
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
  PR_PATH: /pr/${{ github.event.pull_request.number }}

jobs:
  lint:
    if: |
      github.event.inputs.environment == 'lint' ||
      github.event.inputs.environment == 'node'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
    - name: Get NodeJS Version from package.json
      run: |
        echo "$(cat ./package.json)" | jq .engines.node | xargs -I {} echo "NodeVersion="{} >> $GITHUB_ENV
    - name: Use Node.js ${{ env.NodeVersion }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NodeVersion }}
    - run: npm ci
    - name: Run linter
      run: npm run lint

  test:
    if: |
      github.event.inputs.environment == 'test'
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'
          cache: 'npm'
      - run: npm ci
      - name: Run tests
        run: npm run test
        
